import logging
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Select, Button, Row
from aiogram_dialog.widgets.input import TextInput
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message

from dao.events import delete_event, get_all_events, update_event, get_event_by_id 

logger = logging.getLogger(__name__)

class ManageEventSG(StatesGroup):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏.
    """
    list = State()                # –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    event_action = State()        # –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    edit_title = State()          # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    edit_description = State()    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è


async def get_event_list(dialog_manager: DialogManager, **kwargs) -> dict:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –¥–∏–∞–ª–æ–≥–µ
    """
    events = await get_all_events()
    # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º "events" –∏ —Å–ø–∏—Å–∫–æ–º –∫–æ—Ä—Ç–µ–∂–µ–π (–Ω–∞–∑–≤–∞–Ω–∏–µ, id).
    return {
        "events": [(e.title, str(e.id)) for e in events]
    }


async def get_event_details(dialog_manager: DialogManager, **kwargs) -> dict:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ).
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:

    dict: —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏ "event_title" –∏ "event_description".
            –ï—Å–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ.
    """
    event_id = dialog_manager.dialog_data.get("event_id")
    if not event_id:
        return {"event_title": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", "event_description": ""}
    event = await get_event_by_id(int(event_id))
    if not event:
        return {"event_title": "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", "event_description": ""}
    return {
        "event_title": event.title,
        "event_description": event.description
    }


async def on_event_chosen(callback, widget, manager: DialogManager, item_id: str):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π event_id –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è.
    """
    manager.dialog_data["event_id"] = item_id
    await manager.switch_to(ManageEventSG.event_action)


async def on_delete(callback, widget, dialog_manager: DialogManager, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    –£–¥–∞–ª—è–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–∑ –±–∞–∑—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    event_id = dialog_manager.dialog_data.get("event_id")
    if event_id:
        await delete_event(int(event_id))
        await callback.message.answer("‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–∏–ª –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ (/manage_events)")
    await dialog_manager.done()


async def on_edit_title_start(callback, widget, dialog_manager: DialogManager, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è.
    """
    await dialog_manager.switch_to(ManageEventSG.edit_title)


async def on_edit_title(message: Message, value: str, dialog_manager: DialogManager, widget):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è.
    """
    dialog_manager.dialog_data["new_title"] = value.get_value()
    await dialog_manager.switch_to(ManageEventSG.edit_description)


async def on_edit_description(message: Message, value: str, dialog_manager: DialogManager, widget):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ –±–∞–∑–µ, —Å–æ–æ–±—â–∞–µ—Ç –æ–± —É—Å–ø–µ—Ö–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    new_description = value.get_value()
    new_title = dialog_manager.dialog_data.get("new_title")
    event_id = dialog_manager.dialog_data.get("event_id")
    if event_id and new_title:
        await update_event(int(event_id), new_title, new_description)
        await message.answer("‚úèÔ∏è –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ (/manage_events)")
    await dialog_manager.done()


async def on_exit_editing(callback, widget, dialog_manager: DialogManager, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    await dialog_manager.done()
    await callback.message.answer("‚ùå –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à—ë–Ω.")


manage_event_dialog = Dialog(
    Window(
        Const("üìã –°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:"),
        Select(
            Format("‚úèÔ∏è {item[0]}\u200b"),
            id="select_event",
            item_id_getter=lambda x: x[1],
            items="events",
            on_click=on_event_chosen,
        ),
        Button(Const("‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"), id="exit_editing", on_click=on_exit_editing),
        state=ManageEventSG.list,
        getter=get_event_list,
    ),
    Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ–º:"),
        Format("<b>{event_title}</b>"),
        Format("{event_description}"),
        Row(
            Button(Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"), id="edit", on_click=on_edit_title_start),
            Button(Const("üóë –£–¥–∞–ª–∏—Ç—å"), id="delete", on_click=on_delete),
        ),
        Button(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É"), id="back", on_click=lambda c, w, d, **k: d.switch_to(ManageEventSG.list)),
        state=ManageEventSG.event_action,
        getter=get_event_details,
    ),
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:"),
        TextInput("edit_title", on_success=on_edit_title),
        state=ManageEventSG.edit_title,
    ),
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:"),
        TextInput("edit_desc", on_success=on_edit_description),
        state=ManageEventSG.edit_description,
    ),
)
