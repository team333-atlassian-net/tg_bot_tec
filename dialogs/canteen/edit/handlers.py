import logging

from datetime import datetime, date
from aiogram.types import CallbackQuery, Message
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.input import TextInput

from dao.canteen import *
from models import CanteenMenuFileType
from states import ManageCanteenSG

logger = logging.getLogger(__name__)


async def on_edit_start_time_start(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –æ–∫–Ω—É –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π.
    """
    await dialog_manager.switch_to(ManageCanteenSG.edit_start_time)


async def on_edit_start_time(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π.
    """
    start_time_text = value.get_value()
    try:
        time = datetime.strptime(start_time_text, "%H:%M").time()
    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM, –Ω–∞–ø—Ä–∏–º–µ—Ä: 10:00"
        )
        return

    await update_canteen_info(start=time, end=None, description=None)
    await message.answer("‚úèÔ∏è –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
    logger.info(
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π (/manage_canteen_info)"
    )
    await dialog_manager.switch_to(ManageCanteenSG.canteen_info_action)


async def on_edit_end_time_start(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
    """
    await dialog_manager.switch_to(ManageCanteenSG.edit_end_time)


async def on_edit_end_time(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π.
    """
    end_time_text = value.get_value()
    try:
        time = datetime.strptime(end_time_text, "%H:%M").time()
    except ValueError:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM, –Ω–∞–ø—Ä–∏–º–µ—Ä: 16:00"
        )
        return

    await update_canteen_info(start=None, end=time, description=None)
    await message.answer("‚úèÔ∏è –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
    logger.info(
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –≤—Ä–µ–º—è –∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å—Ç–æ–ª–æ–≤–æ–π (/manage_canteen_info)"
    )
    await dialog_manager.switch_to(ManageCanteenSG.canteen_info_action)


async def on_edit_description(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–æ–ª–æ–≤–æ–π.
    """
    await update_canteen_info(None, None, value.get_value())
    await message.answer("‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–æ–ª–æ–≤–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
    logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–æ–ª–æ–≤–æ–π (/manage_canteen_info)")
    await dialog_manager.switch_to(ManageCanteenSG.canteen_info_action)


async def on_delete_canteen_info(
    callback: CallbackQuery, widget, dialog_manager: DialogManager
):
    """
    –£–¥–∞–ª—è–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–ª–æ–≤–æ–π.
    """
    await delete_canteen_info()
    await callback.message.answer("‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–ª–æ–≤–æ–π —É–¥–∞–ª–µ–Ω–∞.")
    logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–ª–æ–≤–æ–π (/manage_canteen_info)")
    await dialog_manager.switch_to(ManageCanteenSG.choice)


async def on_select_menu(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, selected_id: str
):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ–Ω—é –ø–æ ID –∏–∑ —Å–ø–∏—Å–∫–∞.
    """
    menu = await get_canteen_menu_by_id(int(selected_id))
    dialog_manager.dialog_data["selected_menu"] = menu
    dialog_manager.dialog_data["menu_id"] = menu.id
    await dialog_manager.switch_to(ManageCanteenSG.menu_edit_action)


async def on_select_menu_by_date(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, selected_date: date
):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ–Ω—é –ø–æ –¥–∞—Ç–µ (–∏–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä—è).
    """
    menu = await get_canteen_menu_by_date(selected_date)
    if not menu:
        await callback.message.answer("‚ùå –ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    dialog_manager.dialog_data["selected_menu"] = menu
    dialog_manager.dialog_data["menu_id"] = menu.id
    await dialog_manager.switch_to(ManageCanteenSG.menu_edit_action)


async def on_edit_menu_text(
    message: Message, input: TextInput, dialog_manager: DialogManager, widget
):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –º–µ–Ω—é.
    """
    new_text = input.get_value()
    menu_id = dialog_manager.dialog_data.get("menu_id")
    await update_canteen_menu(menu_id, None, new_text, None, None)

    updated_menu = await get_canteen_menu_by_id(menu_id)
    dialog_manager.dialog_data["selected_menu"] = updated_menu

    await message.answer("‚úèÔ∏è –¢–µ–∫—Å—Ç –º–µ–Ω—é –æ–±–Ω–æ–≤–ª—ë–Ω.")
    logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –º–µ–Ω—é —Å—Ç–æ–ª–æ–≤–æ–π (/manage_canteen_info)")
    await dialog_manager.switch_to(ManageCanteenSG.menu_edit_action)


async def on_edit_menu_file(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª (–¥–æ–∫—É–º–µ–Ω—Ç/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ) –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    if not message.document and not message.photo:
        await message.answer("‚ùå –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª (–¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ).")
        return

    file_id = None
    file_type = None
    if message.document:
        file_id = message.document.file_id
        file_type = CanteenMenuFileType.FILE
    elif message.photo:
        file_id = message.photo[-1].file_id
        file_type = CanteenMenuFileType.PHOTO

    menu_id = dialog_manager.dialog_data.get("menu_id")
    await update_canteen_menu(menu_id, None, None, file_id=file_id, file_type=file_type)
    updated_menu = await get_canteen_menu_by_id(menu_id)
    dialog_manager.dialog_data["selected_menu"] = updated_menu

    await message.answer("üìé –§–∞–π–ª –º–µ–Ω—é –æ–±–Ω–æ–≤–ª—ë–Ω.")
    logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª —Ñ–∞–π–ª –º–µ–Ω—é —Å—Ç–æ–ª–æ–≤–æ–π (/manage_canteen_info)")
    await dialog_manager.switch_to(ManageCanteenSG.menu_edit_action)


async def on_delete_menu_file(
    callback: CallbackQuery, widget, dialog_manager: DialogManager
):
    """
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    menu_id = dialog_manager.dialog_data.get("menu_id")
    await delete_canteen_menu_file(menu_id)
    updated_menu = await get_canteen_menu_by_id(menu_id)
    dialog_manager.dialog_data["selected_menu"] = updated_menu

    await callback.message.answer("üóë –§–∞–π–ª –º–µ–Ω—é —É–¥–∞–ª—ë–Ω.")
    await dialog_manager.show()


async def on_delete_menu(
    callback: CallbackQuery, widget, dialog_manager: DialogManager
):
    """
    –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ–Ω—é.
    """
    menu_id = dialog_manager.dialog_data.get("menu_id")
    if not menu_id:
        await callback.message.answer("‚ùå –ú–µ–Ω—é –Ω–µ –≤—ã–±—Ä–∞–Ω–æ.")
        return

    await delete_canteen_menu(menu_id)
    await callback.message.answer("üóë –ú–µ–Ω—é —É–¥–∞–ª–µ–Ω–æ.")
    logger.info(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–∏–ª –º–µ–Ω—é —Å id={menu_id} (/manage_canteen_info)")
    await dialog_manager.switch_to(ManageCanteenSG.select_menu)
