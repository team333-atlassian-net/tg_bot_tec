import logging
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Back, Cancel, Row, Button

from dao.auth import create_registration_request, get_users

logger = logging.getLogger(__name__)


class RegisterDialogSG(StatesGroup):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    first = State()
    last = State()
    middle = State()
    confirm = State()


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–≤–æ–¥–∞ ---

async def on_first_entered(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏.
    """
    dialog_manager.dialog_data["first_name"] = message.text
    await dialog_manager.switch_to(RegisterDialogSG.last)


async def on_last_entered(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ñ–∞–º–∏–ª–∏–∏.
    """
    dialog_manager.dialog_data["last_name"] = message.text
    await dialog_manager.switch_to(RegisterDialogSG.middle)


async def on_middle_entered(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –æ—Ç—á–µ—Å—Ç–≤–∞.
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    dialog_manager.dialog_data["middle_name"] = message.text
    await dialog_manager.switch_to(RegisterDialogSG.confirm)


# --- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ---

async def get_confirm_data(dialog_manager: DialogManager, **kwargs):
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    return {
        "first_name": dialog_manager.dialog_data.get("first_name", "-"),
        "last_name": dialog_manager.dialog_data.get("last_name", "-"),
        "middle_name": dialog_manager.dialog_data.get("middle_name", "-"),
    }


async def on_confirm(callback: CallbackQuery, button, dialog_manager: DialogManager, **kwargs):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É.
    """
    data = dialog_manager.dialog_data
    tg_id = str(callback.from_user.id)

    request = await create_registration_request(
        tg_id,
        data["first_name"],
        data["last_name"],
        data["middle_name"],
    )

    admins = await get_users(admin_rule=True)
    request_id = request.id

    for admin in admins:
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"approve:{request_id}")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject:{request_id}")],
        ])
        await callback.bot.send_message(
            chat_id=admin.tg_id,
            text=(
                "üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:\n"
                f"<b>{data['last_name']} {data['first_name']} {data['middle_name']}</b>"
            ),
            reply_markup=kb
        )

    await callback.message.answer("üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (/register)")
    await dialog_manager.done()


# --- –û–∫–Ω–∞ –¥–∏–∞–ª–æ–≥–∞ ---

first_name_window = Window(
    Const("üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"),
    MessageInput(on_first_entered),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    state=RegisterDialogSG.first,
)

last_name_window = Window(
    Const("üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:"),
    MessageInput(on_last_entered),
    Row(
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    ),
    state=RegisterDialogSG.last,
)

middle_name_window = Window(
    Const("üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ:"),
    MessageInput(on_middle_entered),
    Row(
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    ),
    state=RegisterDialogSG.middle,
)

confirm_window = Window(
    Format(
        "üîé –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö:\n\n"
        "üë§ –ò–º—è: <b>{first_name}</b>\n"
        "üë§ –§–∞–º–∏–ª–∏—è: <b>{last_name}</b>\n"
        "üë§ –û—Ç—á–µ—Å—Ç–≤–æ: <b>{middle_name}</b>"
    ),
    Row(
        Button(Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), id="confirm_register", on_click=on_confirm),
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    ),
    state=RegisterDialogSG.confirm,
    getter=get_confirm_data,
)

register_dialog = Dialog(
    first_name_window,
    last_name_window,
    middle_name_window,
    confirm_window,
)
