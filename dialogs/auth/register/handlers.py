import logging

from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery,
)
from aiogram_dialog import DialogManager

from dao.auth import create_registration_request, get_users
from states import RegisterDialogSG
from dialogs.auth.register.handlers import *
from dialogs.auth.register.getters import *

logger = logging.getLogger(__name__)


async def on_first_entered(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏.
    """
    dialog_manager.dialog_data["first_name"] = message.text
    await dialog_manager.switch_to(RegisterDialogSG.last)


async def on_last_entered(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ñ–∞–º–∏–ª–∏–∏.
    """
    dialog_manager.dialog_data["last_name"] = message.text
    await dialog_manager.switch_to(RegisterDialogSG.middle)


async def on_middle_entered(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –æ—Ç—á–µ—Å—Ç–≤–∞.
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    dialog_manager.dialog_data["middle_name"] = message.text
    await dialog_manager.switch_to(RegisterDialogSG.confirm)


# --- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ---


async def on_confirm(
    callback: CallbackQuery, button, dialog_manager: DialogManager, **kwargs
):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω—É.
    """
    data = dialog_manager.dialog_data
    tg_id = str(callback.from_user.id)

    request = await create_registration_request(
        tg_id,
        data["first_name"],
        data["last_name"],
        data["middle_name"],
    )

    admins = await get_users(admin_rule=True)
    request_id = request.id

    valid_admins = [admin for admin in admins if admin.tg_id]

    if not valid_admins:
        await callback.message.answer(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –ø–æ–∑–∂–µ."
        )
        await dialog_manager.done()
        return

    for admin in valid_admins:
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"approve:{request.id}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject:{request.id}"
                    )
                ],
            ]
        )
        await callback.bot.send_message(
            chat_id=admin.tg_id,
            text=(
                "üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:\n"
                f"<b>{data['last_name']} {data['first_name']} {data['middle_name']}</b>"
            ),
            reply_markup=kb,
        )


    await callback.message.answer(
        "üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
    )
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (/register)")
    await dialog_manager.done()
