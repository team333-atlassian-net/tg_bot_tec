import logging

from aiogram.types import Message
from aiogram.fsm.state import State, StatesGroup

from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Back, Cancel, Row, Select, Radio, ScrollingGroup

from dao.faq import search_faq
from dialogs.faq.view_faq import detail_window_getter

logger = logging.getLogger(__name__)

class FAQSearchSG(StatesGroup):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –ø–æ–∏—Å–∫–∞ FAQ
    """
    search_input = State()
    search_results = State()
    detail = State()

async def on_search_input(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    –î–µ–π—Å—Ç–≤–∏—è:
        - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –Ω–µ –ø—É—Å—Ç–æ–π –∏ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ FAQ –ø–æ –∑–∞–ø—Ä–æ—Å—É
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∑–∞–ø—Ä–æ—Å –≤ dialog_data
        - –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    """
    query = message.text
    if not query or not query.strip():
        await message.answer("‚ùó –í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.")
        return
    query = query.strip()
    faqs = await search_faq(query)
    dialog_manager.dialog_data["search_results"] = [(str(f.id), f.question) for f in faqs]
    dialog_manager.dialog_data["query"] = query
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏–ª –ø–æ–∏—Å–∫ FAQ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '{query}' (/search_faq)")
    await dialog_manager.switch_to(FAQSearchSG.search_results)

async def get_search_results(dialog_manager: DialogManager, **kwargs):
    """
    –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞.
    """
    return {
        "faqs": dialog_manager.dialog_data.get("search_results", []),
        "query": dialog_manager.dialog_data.get("query", "")
    }

async def on_search_result_selected(callback, widget: Select, manager: DialogManager, selected_id: str):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞.
    –î–µ–π—Å—Ç–≤–∏—è:
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        - –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –ø–æ–∫–∞–∑–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –≤–æ–ø—Ä–æ—Å–∞
    """
    manager.dialog_data["selected_faq_id"] = int(selected_id)
    await manager.switch_to(FAQSearchSG.detail)

# --- –û–∫–Ω–∞ ---

# –û–∫–Ω–æ –≤–≤–æ–¥–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
search_input_window = Window(
    Const("üîç –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑—É –¥–ª—è –ø–æ–∏—Å–∫–∞ FAQ:"),
    MessageInput(on_search_input),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    state=FAQSearchSG.search_input,
)

# –û–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
search_results_window = Window(
    Format("üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>{query}</b>"),
    ScrollingGroup(
        Radio(
            Format("{item[1]}"),
            Format("{item[1]}"),
            id="search_results_radio",
            items="faqs",
            item_id_getter=lambda x: x[0],
            on_click=on_search_result_selected,
        ),
        id="search_scroll",
        width=1,
        height=5,
    ),
    Row(
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    ),
    getter=get_search_results,
    state=FAQSearchSG.search_results,
)

# –û–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ FAQ
search_faq_detail_window = Window(
    Format("üìå <b>{faq.question}</b>\n\n{faq.answer}"),
    Row(
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Cancel(Const("‚ùå –ó–∞–∫—Ä—ã—Ç—å"))
    ),
    state=FAQSearchSG.detail,
    getter=detail_window_getter,  # –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–∑ view_faq
)

faq_search_dialog = Dialog(
    search_input_window,
    search_results_window,
    search_faq_detail_window,
)
