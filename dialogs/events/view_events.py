import logging

from aiogram.fsm.state import State, StatesGroup
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Back, Cancel, Row, Select, Radio, ScrollingGroup

from dao.events import get_all_events, get_event_by_id

logger = logging.getLogger(__name__)


class EventsViewSG(StatesGroup):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.
    """
    list = State()
    detail = State()


async def get_event_list(dialog_manager: DialogManager, **kwargs):
    """
    –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, title) –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π,
    –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Select –∏–ª–∏ Radio.

    Returns:
        dict: {'events': [(id, title), ...]}
    """
    events = await get_all_events()
    return {"events": [(str(e.id), e.title) for e in events]}


async def get_event_detail(dialog_manager: DialogManager, **kwargs):
    """
    –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π event_id –∏–∑ dialog_data.

    Returns:
        dict: {'event': Event}
    """
    event_id = int(dialog_manager.dialog_data["selected_event_id"])
    event = await get_event_by_id(event_id)
    return {"event": event}


async def on_event_selected(callback, widget: Select, manager: DialogManager, selected_id: str):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π event_id –≤ dialog_data –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ detail.

    Args:
        selected_id (str): ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
    """
    manager.dialog_data["selected_event_id"] = int(selected_id)
    await manager.switch_to(EventsViewSG.detail)


async def detail_window_getter(dialog_manager: DialogManager, **kwargs):
    """
    –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –æ–∫–Ω–∞ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω Format.

    Returns:
        dict: {'event': Event}
    """
    data = await get_event_detail(dialog_manager)
    return data


# –û–∫–Ω–æ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
event_list_window = Window(
    Const("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ:"),
    ScrollingGroup(
        Radio(
            Format("{item[1]}"),  # –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
            Format("{item[1]}"),  # –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
            id="event_radio",
            item_id_getter=lambda x: x[0],
            on_click=on_event_selected,
            items="events",
        ),
        id="event_scroll",
        width=1,
        height=3,
    ),
    Cancel(Const("‚ùå –û—Ç–º–µ–Ω–∞")),
    state=EventsViewSG.list,
    getter=get_event_list,
)

# –û–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
event_detail_window = Window(
    Format("üìå <b>{event.title}</b>\n\n{event.description}"),
    Row(
        Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
        Cancel(Const("‚ùå –ó–∞–∫—Ä—ã—Ç—å"))
    ),
    state=EventsViewSG.detail,
    getter=detail_window_getter,
)

# –î–∏–∞–ª–æ–≥ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
view_event_dialog = Dialog(event_list_window, event_detail_window)