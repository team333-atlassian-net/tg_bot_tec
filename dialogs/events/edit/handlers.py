import logging

from aiogram.types import Message, CallbackQuery
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.input import TextInput

from dao.events import delete_event, update_event
from states import ManageEventSG

logger = logging.getLogger(__name__)


async def on_event_selected(
    callback: CallbackQuery, widget, manager: DialogManager, item_id: str
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –¥–µ—Ç–∞–ª–∏.
    """
    manager.dialog_data["event_id"] = item_id
    await manager.switch_to(ManageEventSG.event_action)


async def on_edit_title_start(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è.
    """
    await dialog_manager.switch_to(ManageEventSG.edit_title)


async def on_edit_description_start(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è.
    """
    await dialog_manager.switch_to(ManageEventSG.edit_description)


async def on_edit_title(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    event_id = dialog_manager.dialog_data.get("event_id")
    if event_id:
        await update_event(int(event_id), value.get_value(), None)
        await message.answer("‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω –æ–±–Ω–æ–≤–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ (/manage_events)")
        await dialog_manager.switch_to(ManageEventSG.event_action)
    await dialog_manager.done()


async def on_edit_description(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    event_id = dialog_manager.dialog_data.get("event_id")
    if event_id:
        await update_event(int(event_id), None, value.get_value())
        await message.answer("üìù –û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω –æ–±–Ω–æ–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ (/manage_events)")
        await dialog_manager.switch_to(ManageEventSG.event_action)
    await dialog_manager.done()


async def on_delete_event(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.
    """
    event_id = dialog_manager.dialog_data.get("event_id")
    if event_id:
        await delete_event(int(event_id))
        await callback.message.answer("‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–∏–ª –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ (/manage_events)")
        await dialog_manager.switch_to(ManageEventSG.list)
    await dialog_manager.done()


async def on_exit(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    await callback.message.answer("‚ùå –í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
    await dialog_manager.done()
