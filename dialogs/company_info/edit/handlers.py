import logging
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery

from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.kbd import Button, Cancel, Row, Radio, ScrollingGroup
from dao.company_info import (
    delete_company_info,
    update_company_info,
)
from states import ManageCompanyInfoSG

logger = logging.getLogger(__name__)


async def on_company_info_selected(
    callback: CallbackQuery, widget, manager: DialogManager, item_id: str
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –¥–µ—Ç–∞–ª–∏.
    """
    manager.dialog_data["company_info_id"] = item_id
    await manager.switch_to(ManageCompanyInfoSG.company_info_action)


async def on_edit_title_start(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è.
    """
    await dialog_manager.switch_to(ManageCompanyInfoSG.edit_title)


async def on_edit_description_start(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∫–Ω—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è.
    """
    await dialog_manager.switch_to(ManageCompanyInfoSG.edit_description)


async def on_edit_title(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    company_info_id = dialog_manager.dialog_data.get("company_info_id")
    if company_info_id:
        await update_company_info(int(company_info_id), value.get_value(), None)
        await message.answer("‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω –æ–±–Ω–æ–≤–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ (/manage_company_info)")
        await dialog_manager.switch_to(ManageCompanyInfoSG.company_info_action)
    await dialog_manager.done()


async def on_edit_description(
    message: Message, value: TextInput, dialog_manager: DialogManager, widget
):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    company_info_id = dialog_manager.dialog_data.get("company_info_id")
    if company_info_id:
        await update_company_info(int(company_info_id), None, value.get_value())
        await message.answer("üìù –û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω –æ–±–Ω–æ–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ (/manage_company_info)")
        await dialog_manager.switch_to(ManageCompanyInfoSG.company_info_action)
    await dialog_manager.done()


async def on_file_edit(message: Message, widget, dialog_manager: DialogManager):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π —Ñ–∞–π–ª –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    company_info_id = dialog_manager.dialog_data.get("company_info_id")
    file_id = None
    if message.document:
        file_id = message.document.file_id

    if file_id and company_info_id:
        await update_company_info(int(company_info_id), None, None, file_id=file_id)
        await message.answer("üìé –§–∞–π–ª –æ–±–Ω–æ–≤–ª—ë–Ω.")
        logger.info("–ê–¥–º–∏–Ω –æ–±–Ω–æ–≤–∏–ª —Ñ–∞–π–ª (/manage_company_info)")
        await dialog_manager.switch_to(ManageCompanyInfoSG.company_info_action)
    else:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç.")


async def on_image_edit(message: Message, widget, dialog_manager: DialogManager):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è CompanyInfo.
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç file_id –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    company_info_id = dialog_manager.dialog_data.get("company_info_id")
    image_id = None

    if message.photo:
        image_id = message.photo[-1].file_id  # –°–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Ñ–æ—Ç–æ

    if image_id and company_info_id:
        await update_company_info(
            int(company_info_id), None, None, None, image_id=image_id
        )
        await message.answer("üìé –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
        logger.info("–ê–¥–º–∏–Ω –æ–±–Ω–æ–≤–∏–ª —Ñ–æ—Ç–æ (/manage_company_info)")
        await dialog_manager.switch_to(ManageCompanyInfoSG.company_info_action)
    else:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")


async def on_delete_company_info(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –£–¥–∞–ª—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.
    """
    company_info_id = dialog_manager.dialog_data.get("company_info_id")
    if company_info_id:
        await delete_company_info(int(company_info_id))
        await callback.message.answer("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞.")
        logger.info("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏ (/manage_company_info)")
        await dialog_manager.switch_to(ManageCompanyInfoSG.list)

    await dialog_manager.done()


async def on_exit(
    callback: CallbackQuery, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    await callback.message.answer("‚ùå –í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
    await dialog_manager.done()
