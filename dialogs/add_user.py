import io
import pandas as pd
from aiogram.fsm.state import State, StatesGroup
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.text import Const
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.kbd import Row, Button
from aiogram.types import Message
from dao.auth import add_user, add_user_with_excel
from models import User
from utils.auth import require_admin
from utils.generate_pin import generate_unique_pin

class AddUserSG(StatesGroup):
    """–ö–ª–∞—Å—Å —Å–æ—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    method = State()
    first = State()
    last = State()
    middle = State()
    upload = State()

    
# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ ---
async def on_manual_chosen(callback, button, manager: DialogManager):
    await manager.switch_to(AddUserSG.first)

async def on_excel_chosen(callback, button, manager: DialogManager):
    await manager.switch_to(AddUserSG.upload)

async def on_excel_uploaded(message: Message, widget: MessageInput, dialog_manager: DialogManager):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ Excel-—Ñ–∞–π–ª–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    user = await require_admin(message)
    if not user:
        return

    file = message.document
    if not file.file_name.endswith(".xlsx"):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Excel-—Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .xlsx")
        return

    file_bytes = await message.bot.download(file)
    df = pd.read_excel(io.BytesIO(file_bytes.read()))

    required_columns = {"first_name", "last_name", "middle_name"}
    if not required_columns.issubset(df.columns):
        await message.answer("‚ùå –í Excel-—Ñ–∞–π–ª–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ–ª–æ–Ω–∫–∏: first_name, last_name, middle_name")
        return

    added = await add_user_with_excel(df)

    await message.answer(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {added} –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Excel.")
    await dialog_manager.done()
    await dialog_manager.reset_stack()

async def on_first_entered(message: Message,
                           value: str,
                           dialog_manager: DialogManager,
                           widget):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–º–µ–Ω–∏"""
    dialog_manager.dialog_data["first_name"] = value.get_value()
    await dialog_manager.switch_to(AddUserSG.last)

async def on_last_entered(message: Message,
                           value: str,
                           dialog_manager: DialogManager,
                           widget):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–º–∏–ª–∏–∏"""
    dialog_manager.dialog_data["last_name"] = value.get_value()
    await dialog_manager.switch_to(AddUserSG.middle)

async def on_middle_entered(message: Message,
                           value: str,
                           dialog_manager: DialogManager,
                           widget):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—á–µ—Å—Ç–≤–∞
    –†–µ–≥–∏—Å—Ç—Ä–∞–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    data = dialog_manager.dialog_data
    middle_name = value.get_value()
    pin = await generate_unique_pin()

    user = User(first_name=data["first_name"],
                last_name=data["last_name"],
                middle_name=middle_name,
                pin_code=pin,
                tg_id=None)
    await add_user(user)

    await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω.\nüìå PIN-–∫–æ–¥: <b>{pin}</b>")
    await dialog_manager.done()

add_user_dialog = Dialog(
    # –í—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞
    Window(
        Const("–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π?"),
        Row(
            Button(Const("üìÑ Excel"), id="excel", on_click=on_excel_chosen),
            Button(Const("‚úçÔ∏è –í—Ä—É—á–Ω—É—é"), id="manual", on_click=on_manual_chosen),
        ),
        state=AddUserSG.method,
    ),
    # –í–≤–æ–¥ –∏–º–µ–Ω–∏
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –∏–º—è:"),
        TextInput(id="first_name", on_success=on_first_entered),
        state=AddUserSG.first,
    ),
    # –í–≤–æ–¥ —Ñ–∞–º–∏–ª–∏–∏
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é:"),
        TextInput(id="last_name", on_success=on_last_entered),
        state=AddUserSG.last,
    ),
    # –í–≤–æ–¥ –æ—Ç—á–µ—Å—Ç–≤–∞
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –æ—Ç—á–µ—Å—Ç–≤–æ:"),
        TextInput(id="middle_name", on_success=on_middle_entered),
        state=AddUserSG.middle,
    ),
    # –ó–∞–≥—Ä—É–∑–∫–∞ Excel
    Window(
        Const("–ü—Ä–∏—à–ª–∏—Ç–µ Excel-—Ñ–∞–π–ª (.xlsx) —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏: first_name, last_name, middle_name"),
        MessageInput(on_excel_uploaded, content_types=['document']),
        state=AddUserSG.upload,
    ),
)
