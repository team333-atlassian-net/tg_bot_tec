from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import Command
from aiogram.enums.parse_mode import ParseMode
from aiogram.client.bot import DefaultBotProperties

from config import settings
from utils.auth import require_auth
from dialogs import register_all_dialogs
from handlers.login import router as login_router
from handlers.register import router as register_router
from handlers.request_register_callbacks import router as register_request_router
from handlers.add_user import router as add_users_router
from handlers.events import router as events_router

bot = Bot(token=settings.API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

register_all_dialogs(dp)

dp.include_router(login_router)
dp.include_router(register_router)
dp.include_router(register_request_router)
dp.include_router(add_users_router)
dp.include_router(events_router)

@dp.message(Command('start'))
async def start_handler(message: Message):
    """–°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö—ç–Ω–¥–ª–µ—Ä"""
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏ –¢–≠–ö.\n–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –≤–≤–µ–¥–∏—Ç–µ /help")

@dp.message(Command("help"))
async def help_handler(message: Message):
    """–•—ç–Ω–¥–ª–µ—Ä —Å–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
    
    user = await require_auth(message) # –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if not user:
        return
    
    if user.admin_rule: # –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
        help_text = (
            "üìå <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n\n"
            "/add_user - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–µ–π) –≤ —Å–∏—Å—Ç–µ–º—É –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —Å –ø–æ–º–æ—â—å—é —Ñ–∞–π–ª–∞ Excel\n"
            "/add_event - –î–æ–±–∞–≤–∏—Ç—å –∏ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –∫–æ—Ä–ø–æ—Ä–æ—Ç–∏–≤–Ω–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏\n"
            "üìå <b>–û–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
            "/start ‚Äî –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n"
            "/login ‚Äî –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –ü–ò–ù-–∫–æ–¥—É\n"
            "/register - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ\n"
            "/help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/events - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n"
        )
    else: # –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        help_text = (
            "üìå <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
            "/start ‚Äî –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º\n"
            "/login ‚Äî –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –ü–ò–ù-–∫–æ–¥—É\n"
            "/register - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ\n"
            "/events - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n"
            "/help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        )
    await message.answer(help_text)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())